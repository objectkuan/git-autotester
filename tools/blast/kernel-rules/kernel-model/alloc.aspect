/* The functions which has first parameter gfp_t. */
pointcut ALLOC: call(unsigned long __get_free_pages(.., gfp_t flags, ..))
  || execution(static inline struct page *alloc_pages(.., gfp_t flags, ..))
  || call(struct page *alloc_page_vma(.., gfp_t flags, ..))
  || execution(static inline void *kmalloc(.., gfp_t flags, ..))
  || execution(static inline struct sk_buff *alloc_skb(.., gfp_t flags, ..))
  || execution(static inline struct sk_buff *alloc_skb_fclone(.., gfp_t flags, ..))
  || call(struct sk_buff *skb_copy(.., gfp_t flags, ..))
  || execution(static inline struct sk_buff *skb_share_check(.., gfp_t flags, ..))
  || call(struct sk_buff *skb_clone(.., gfp_t flags, ..))
  || execution(static inline struct sk_buff *skb_unshare(.., gfp_t flags, ..))
/* __dev_alloc_skb calls alloc_skb so we don't need to instrument it. */
  || execution(static inline struct page *__netdev_alloc_page(.., gfp_t flags, ..))
  || call(int usb_submit_urb(.., gfp_t flags, ..))
  || call(struct urb *usb_alloc_urb(.., gfp_t flags, ..))
/* This is rather optional for SLAB memory subsystem, just for SLUB. */
  || execution(static inline void *kmalloc_node(.., gfp_t flags, ..))
/* This function isn't static inline and has no body to be instrumented among related to a driver files. So instrument calls to it. */
  || call(void *kmem_cache_alloc(.., gfp_t flags, ..))
  || call(void *mempool_alloc(.., gfp_t flags, ..))
  || call(void *dma_pool_alloc(.., gfp_t flags, ..))
  || execution(static inline void *kcalloc(.., gfp_t flags, ..))
  || call(void * krealloc(.., gfp_t flags, ..))
  || call(struct sk_buff *__netdev_alloc_skb(.., gfp_t flags, ..))
  || call(void *usb_alloc_coherent(.., gfp_t flags, ..))
  || call(int mempool_resize(.., gfp_t flags, ..))
  || call(int pskb_expand_head(.., gfp_t flags, ..))
  || call(struct sk_buff *skb_copy_expand(.., gfp_t flags, ..))
  || execution(static inline void *dma_zalloc_coherent(.., gfp_t flags, ..))
  || execution(static inline void *dma_alloc_coherent(.., gfp_t flags, ..))

/* Separate weaving of kzalloc bacause it should not call kmalloc in the body */
pointcut ALLOC_AROUND: execution(static inline void *kzalloc(.., gfp_t flags, ..))
  || execution(static inline void *kzalloc_node(.., gfp_t flags, ..))
  || execution(static inline void *kmem_cache_zalloc(.., gfp_t flags, ..))

/* The functions without parameter gfp_t. Implicit flag GFP_KERNEL.*/
pointcut ALLOC_WITHOUT: call(void *vmalloc(..))
  || call(void *vzalloc(..))
  || call(void *vmalloc_user(..))
  || call(void *vmalloc_node(..))
  || call(void *vzalloc_node(..))
  || call(void *vmalloc_exec(..))
  || call(void *vmalloc_32(..))
  || call(void *vmalloc_32_user(..))

pointcut alloc_pages: define(alloc_pages(gfp_mask, order))

pointcut alloc_page_vma: define(alloc_page_vma(gfp_mask, vma, addr))

